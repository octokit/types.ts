// DO NOT EDIT THIS FILE
import { OctokitResponse } from "../OctokitResponse";
import { RequestHeaders } from "../RequestHeaders";
import { RequestRequestOptions } from "../RequestRequestOptions";
import { RequestParameters } from "../RequestParameters";
import { RequestOptions } from "../RequestOptions";

type RequiredPreview<T> = {
  mediaType: {
    previews: [T, ...string[]];
  };
};

type Endpoint<
  Parameters extends RequestParameters,
  Request extends RequestOptions,
  Response extends OctokitResponse<any>
> = {
  parameters: Parameters;
  request: Request;
  response: Response;
};

export interface Endpoints {
  {{#each endpointsByRoute}}
  /**
   * @see {{documentationUrl}}
   */
  "{{@key}}": Endpoint<{{optionsTypeName}}, {{requestOptionsTypeName}}, OctokitResponse<{{responseTypeName}}>>,
  {{/each}}
}

{{#each options}}
type {{parameters.name}} = {
{{#each parameters.parameters}}
  {{&jsdoc}}
  {{{name this}}}: {{{type this}}}
{{/each}}
}
  {{#requiredPreview}} & RequiredPreview<"{{this}}"> {{/requiredPreview}}
  {{#headers}} & {{{headersType this}}} {{/headers}}
type {{request.name}} = {
  method: "{{request.method}}",
  url: "{{request.url}}",
  headers: RequestHeaders,
  request: RequestRequestOptions
}
{{&response}}
{{/each}}

{{#childParams}}
type {{paramTypeName}} = {
{{#params}}
  {{{name this}}}: {{{type this}}}
{{/params}}
};
{{/childParams}}
