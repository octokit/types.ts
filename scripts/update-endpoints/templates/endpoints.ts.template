// DO NOT EDIT THIS FILE
import { paths } from "@octokit/openapi-types";
import { OctokitResponse } from "../OctokitResponse";
import { RequestHeaders } from "../RequestHeaders";
import { RequestRequestOptions } from "../RequestRequestOptions";

type OpenApiParameters = {
  parameters?: {
    path?: {
      [name: string]: unknown;
    };
    query?: {
      [name: string]: unknown;
    };
  };
  requestBody?: {};
};

type Parameters<
  O extends OpenApiParameters
> = ("path" extends keyof O["parameters"] ? O["parameters"]["path"] : {}) &
  ("query" extends keyof O["parameters"] ? O["parameters"]["query"] : {}) &
  ("requestBody" extends keyof O
    ? "application/json" extends keyof O["requestBody"]
      ? O["requestBody"]["application/json"]
      : {}
    : {});

type SuccessStatuses = {
  "200": 200;
  "201": 201;
  "204": 204;
};

type DataType<T> = "application/json" extends keyof T
  ? T["application/json"]
  : unknown;
type Response<R, S extends keyof R = keyof R> = S extends keyof SuccessStatuses
  ? R[S] extends never
    ? Omit<OctokitResponse<unknown, SuccessStatuses[S]>, "data">
    : OctokitResponse<DataType<R[S]>, SuccessStatuses[S]>
  : never;

type MethodsMap = {
  delete: "DELETE";
  get: "GET";
  patch: "PATCH";
  post: "POST";
  put: "PUT";
};

type Operation<Url extends keyof paths, Method extends keyof paths[Url]> = {
  parameters: Parameters<paths[Url][Method]>;
  request: {
    method: Method extends keyof MethodsMap ? MethodsMap[Method] : never;
    url: Url;
    headers: RequestHeaders;
    request: RequestRequestOptions;
  };
  response: Response<paths[Url][Method]>;
};

// TBD: set required previews
// type RequiredPreview<T> = {
//   mediaType: {
//     previews: [T, ...string[]];
//   };
// };

export interface Endpoints {
  {{#each endpointsByRoute}}
  "{{@key}}": Operation<
    "{{url}}",
    "{{method}}"
  >,
  {{/each}}
}