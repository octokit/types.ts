name: Update
"on":
  repository_dispatch:
    types:
      - octokit/openapi-types.ts release
  workflow_dispatch: null
jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
      - run: git checkout routes-update || true
      - run: npm install @octokit/openapi-types@latest
        if: github.event_name == 'repository_dispatch'
      - run: npm ci
      - run: >-
          node -e "console.log('::set-output name=version::' +
          require('@octokit/openapi-types/package').octokit['openapi-version'])"
        id: openapi_types
      - run: npm run update-endpoints
        env:
          VERSION: ${{ steps.openapi_types.outputs.version }}
      - name: Create Pull Request
        uses: gr2m/create-or-update-pull-request-action@v1.x
        env:
          GITHUB_TOKEN: ${{ secrets.OCTOKITBOT_PAT }}
        with:
          title: ðŸš§ GitHub OpenAPI spec changed
          body: >
            Make sure to update the commits so that the merge results in helpful
            release notes, see [Merging the Pull Request & releasing a new
            version](https://github.com/octokit/rest.js/blob/master/CONTRIBUTING.md#merging-the-pull-request--releasing-a-new-version).


            In general


            - Avoid breaking changes at all costs

            - If there are no typescript or code changes, use a `docs` prefix

            - If there are typescript changes but no code changes, use
            `fix(typescript)` prefix

            - If there are code changes, use `fix` if a problem was resolved,
            `feat` if new endpoints / parameters were added, and
            `feat(deprecation)` if a method was deprecated.
          branch: openapi-update
          commit-message: WIP octokit/openapi updated
          author: Octokit Bot <33075676+octokitbot@users.noreply.github.com>
          labels: "Type: Maintenance, typescript"
