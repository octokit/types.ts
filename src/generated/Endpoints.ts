// DO NOT EDIT THIS FILE
import { paths } from "@octokit/openapi-types";
import { OctokitResponse } from "../OctokitResponse";
import { RequestHeaders } from "../RequestHeaders";
import { RequestRequestOptions } from "../RequestRequestOptions";

type Operation = {
  parameters: {
    path?: {
      [name: string]: unknown;
    };
    query?: {
      [name: string]: unknown;
    };
  };
  requestBody?: {};
};

type Parameters<O extends Operation> = ("path" extends keyof O["parameters"]
  ? O["parameters"]["path"]
  : {}) &
  ("query" extends keyof O["parameters"] ? O["parameters"]["query"] : {}) &
  ("requestBody" extends keyof O
    ? "application/json" extends keyof O["requestBody"]
      ? O["requestBody"]["application/json"]
      : {}
    : {});

type SuccessStatuses = {
  "200": 200;
  "201": 201;
  "204": 204;
};

type DataType<T> = "application/json" extends keyof T
  ? T["application/json"]
  : unknown;
type Response<R, S extends keyof R = keyof R> = S extends keyof SuccessStatuses
  ? R[S] extends never
    ? Omit<OctokitResponse<unknown, SuccessStatuses[S]>, "data">
    : OctokitResponse<DataType<R[S]>, SuccessStatuses[S]>
  : never;

type CreateIssue = paths["/repos/{owner}/{repo}/issues"]["post"];

export interface Endpoints {
  /**
   * @see https://docs.github.com/v3/issues/#create-an-issue
   */
  "POST /repos/{owner}/{repo}/issues": {
    parameters: Parameters<CreateIssue>;
    request: IssuesCreateRequestOptions;
    response: Response<CreateIssue["responses"]>;
  };
}

type IssuesCreateRequestOptions = {
  method: "POST";
  url: "/repos/{owner}/{repo}/issues";
  headers: RequestHeaders;
  request: RequestRequestOptions;
};
